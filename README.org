* Encrypted repo setup

#+BEGIN_SRC sh
  export BORG_PASSCOMMAND="security -q find-generic-password -l 'borgmatic version1' -w"
  borg init --encryption=keyfile-blake2 <PATH>
  borg config <PATH> additional_free_space 2G
  borg config <PATH> max_segment_size 240M # needed for Box.com uploads
#+END_SRC



list the temp directory

#+BEGIN_SRC bash :results output
    umount ~/1st_temp/ || true

    mount -t smbfs //bishbr@icdwpcoredfs01.peroot.com/Share/1st%20Temp ~/1st_temp
    ls -ld ~/1st_temp/bishbr
#+END_SRC

#+RESULTS:
: drwx------+ 1 bishbr 1160039685 16384 May  9 13:38 /Users/bishbr/1st_temp/bishbr

1st_temp borg repo create

#+BEGIN_SRC sh :results output
  umount ~/1st_temp/ || true

  mount -t smbfs //bishbr@icdwpcoredfs01.peroot.com/Share/1st%20Temp ~/1st_temp
  mkdir -p ~/1st_temp/bishbr

  export BORG_PASSCOMMAND="security -q find-generic-password -l 'borgmatic version1' -w"
  borg init --progress --verbose --encryption=keyfile-blake2 ~/1st_temp/bishbr/borg
  umount ~/1st_temp
#+END_SRC


#+RESULTS:
#+begin_example
Initializing repository at "/Users/bishbr/1st_temp/bishbr/borg"
Key in "/Users/bishbr/.config/borg/keys/Users_bishbr_1st_temp_bishbr_borg.7" created.
Keep this key safe. Your data will be inaccessible without it.
Initializing cache transaction: Reading configInitializing cache transaction: Reading chunksInitializing cache transaction: Reading filesSynchronizing chunks cache...
Archives: 0, w/ cached Idx: 0, w/ outdated Idx: 0, w/o cached Idx: 0.
Done.
Saving chunks cacheSaving cache config
By default repositories initialized with this version will produce security
errors if written to with an older version (up to and including Borg 1.0.8).

If you want to use these older versions, you can disable the check by running:
borg upgrade --disable-tam /Users/bishbr/1st_temp/bishbr/borg

See https://borgbackup.readthedocs.io/en/stable/changes.html#pre-1-0-9-manifest-spoofing-vulnerability for details about the security implications.

IMPORTANT: you will need both KEY AND PASSPHRASE to access this repo!
Use "borg key export" to export the key, optionally in printable format.
Write down the passphrase. Store both at safe place(s).

#+end_example

* Keyfile export to USB drive

#+BEGIN_SRC sh
borg key export ~/box/borg-encrypted /Volumes/sandisk/Artifacts/borg-encrypted.key
#+END_SRC

#+RESULTS:

* Release locking

Had to nuke some lock files after several failed backups

#+BEGIN_SRC sh :results output
rm -f /Volumes/Redsandisk/borgmatic/lock.exclusive/*
rm -f /Volumes/Sandisk/borgmatic/lock.exclusive/*
rm -f ~/box/borgmatic/lock.exclusive/*
rm -f ~/.cache/borg/*
#+END_SRC

#+RESULTS:

* TODO update the borg executable on the external devices
borg's out of date on the USB disks



 